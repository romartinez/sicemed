<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Sicemed.nunit" total="37" errors="11" failures="7" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2011-10-26" time="23:03:55">
  <environment nunit-version="2.5.10.11092" clr-version="2.0.50727.5448" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="C:\Tools\NUnit-2.5.10.11092\bin\net-2.0" machine-name="WPOCH-LAPTOP" user="wpoch" user-domain="wpoch-laptop" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Project" name="D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Sicemed.nunit" executed="True" result="Failure" success="False" time="5.642" asserts="0">
    <results>
      <test-suite type="Assembly" name="D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\bin\x86\Debug\Sicemed.Tests.dll" executed="True" result="Failure" success="False" time="5.637" asserts="0">
        <results>
          <test-suite type="Namespace" name="Sicemed" executed="True" result="Failure" success="False" time="5.637" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Failure" success="False" time="5.637" asserts="0">
                <results>
                  <test-suite type="Namespace" name="Infrastructure" executed="True" result="Failure" success="False" time="4.403" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Services" executed="True" result="Failure" success="False" time="4.402" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="MembershipServiceTests" executed="True" result="Failure" success="False" time="4.402" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.NoPuedoLoguearmeConUnMalPassword" executed="True" result="Success" success="True" time="3.898" asserts="1" />
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.NoPuedoLoguearmeConUnMalUsuario" executed="True" result="Success" success="True" time="0.052" asserts="1" />
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.NoPuedoLoguearmeConUnMalUsuarioYMalPassword" executed="True" result="Success" success="True" time="0.020" asserts="1" />
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoBloquearUnUsuario" executed="True" result="Success" success="True" time="0.075" asserts="2" />
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoBloquearYDesbloquearUnUsuario" executed="True" result="Success" success="True" time="0.062" asserts="2" />
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoCambiarElPasswordYLoguearmeConElNuevo" executed="True" result="Error" success="False" time="0.084" asserts="0">
                                <failure>
                                  <message><![CDATA[Moq.MockException : 
Expected invocation on the mock at least once, but was never performed: x => x.SendPasswordResetEmail(.usuario, .token)
No setups configured.

Performed invocations:
IMailSenderService.SendPasswordResetEmail(walter.poch@gmail.com, "rFttAl0d6PqIG")]]></message>
                                  <stack-trace><![CDATA[at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)
at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)
at Moq.Mock.Verify[T](Mock mock, Expression`1 expression, Times times, String failMessage)
at Moq.Mock`1.Verify(Expression`1 expression)
at Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoCambiarElPasswordYLoguearmeConElNuevo() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Infrastructure\Services\MembershipServiceTests.cs:line 162
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoCrearUnUsuario" executed="True" result="Error" success="False" time="0.017" asserts="0">
                                <failure>
                                  <message><![CDATA[Moq.MockException : 
Expected invocation on the mock at least once, but was never performed: x => x.SendNewUserEmail(.usuario)
No setups configured.
No invocations performed.]]></message>
                                  <stack-trace><![CDATA[at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)
at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)
at Moq.Mock.Verify[T](Mock mock, Expression`1 expression, Times times, String failMessage)
at Moq.Mock`1.Verify(Expression`1 expression)
at Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoCrearUnUsuario() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Infrastructure\Services\MembershipServiceTests.cs:line 16
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoLoguarme" executed="True" result="Failure" success="False" time="0.037" asserts="1">
                                <failure>
                                  <message><![CDATA[  Expected: <>
  But was:  <walter.poch@gmail.com>
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoLoguarme() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Infrastructure\Services\MembershipServiceTests.cs:line 35
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoPedirUnPasswordReset" executed="True" result="Error" success="False" time="0.043" asserts="0">
                                <failure>
                                  <message><![CDATA[Moq.MockException : 
Expected invocation on the mock at least once, but was never performed: x => x.SendPasswordResetEmail(.usuario, .token)
No setups configured.

Performed invocations:
IMailSenderService.SendPasswordResetEmail(walter.poch@gmail.com, "FY5daj8JlSvhAtk7bf")]]></message>
                                  <stack-trace><![CDATA[at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)
at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)
at Moq.Mock.Verify[T](Mock mock, Expression`1 expression, Times times, String failMessage)
at Moq.Mock`1.Verify(Expression`1 expression)
at Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.PuedoPedirUnPasswordReset() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Infrastructure\Services\MembershipServiceTests.cs:line 143
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.UnUsuarioSeBloqueaCon3IntentosDeLoginFallidos" executed="True" result="Failure" success="False" time="0.058" asserts="2">
                                <failure>
                                  <message><![CDATA[  Expected: BAD_PASSWORD
  But was:  USER_LOCKED
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Infrastructure.Services.MembershipServiceTests.UnUsuarioSeBloqueaCon3IntentosDeLoginFallidos() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Infrastructure\Services\MembershipServiceTests.cs:line 116
]]></stack-trace>
                                </failure>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Models" executed="True" result="Failure" success="False" time="1.227" asserts="0">
                    <results>
                      <test-suite type="Namespace" name="Agendas" executed="True" result="Success" success="True" time="0.266" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="AgendaTests" executed="True" result="Success" success="True" time="0.266" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Agendas.AgendaTests.NoPuedoAsignarUnaAgendaAUnProfesionalConUnaEspecialidadQueNoPosee" executed="True" result="Success" success="True" time="0.008" asserts="1" />
                              <test-case name="Sicemed.Tests.Models.Agendas.AgendaTests.NoPuedoAsignarUnaAgendaAUnProfesionalConUnHorarioHastaMenorAlHorarioDesde" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                              <test-case name="Sicemed.Tests.Models.Agendas.AgendaTests.PuedoAsignarUnaAgendaAUnProfesional" executed="True" result="Success" success="True" time="0.241" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Especialidades" executed="True" result="Failure" success="False" time="0.055" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="EspecialidadesTests" executed="True" result="Failure" success="False" time="0.055" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Especialidades.EspecialidadesTests.NoPuedoCrearUnaEspecialidadConNombreDuplicado" executed="True" result="Success" success="True" time="0.029" asserts="1" />
                              <test-case name="Sicemed.Tests.Models.Especialidades.EspecialidadesTests.PuedoCrearUnaEspecialidad" executed="True" result="Error" success="False" time="0.023" asserts="0">
                                <failure>
                                  <message><![CDATA[NHibernate.Exceptions.GenericADOException : could not execute batch command.[SQL: SQL not available]
  ----> System.Data.SqlClient.SqlException : Violation of UNIQUE KEY constraint 'UQ__Especial__75E3EFCF3429BB53'. Cannot insert duplicate key in object 'dbo.Especialidad'. The duplicate key value is (Traumatologo).
The statement has been terminated.]]></message>
                                  <stack-trace><![CDATA[at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatchWithTiming(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatch()
at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
at NHibernate.Engine.ActionQueue.ExecuteActions()
at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
at NHibernate.Event.Default.DefaultFlushEventListener.OnFlush(FlushEvent event)
at NHibernate.Impl.SessionImpl.Flush()
at Sicemed.Tests.Models.Especialidades.EspecialidadesTests.PuedoCrearUnaEspecialidad() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Especialidades\EspecialidadesTests.cs:line 20
--SqlException
at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
at System.Data.SqlClient.SqlCommand.ExecuteBatchRPCCommand()
at System.Data.SqlClient.SqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientSqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
]]></stack-trace>
                                </failure>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Feriados" executed="True" result="Success" success="True" time="0.083" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="FeriadoTests" executed="True" result="Success" success="True" time="0.083" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Feriados.FeriadoTests.PuedoGrabarUnFeriado" executed="True" result="Success" success="True" time="0.082" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Localidades" executed="True" result="Success" success="True" time="0.084" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="LocalidadesTests" executed="True" result="Success" success="True" time="0.083" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Localidades.LocalidadesTests.PuedoAgregarUnaLocalidadAUnaProvincia" executed="True" result="Success" success="True" time="0.082" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Paginas" executed="True" result="Failure" success="False" time="0.210" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="PaginasTests" executed="True" result="Failure" success="False" time="0.209" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Paginas.PaginasTests.PuedoAgregarUnaPagina" executed="True" result="Success" success="True" time="0.039" asserts="0" />
                              <test-case name="Sicemed.Tests.Models.Paginas.PaginasTests.PuedoAgregarUnaPaginaConHijos" executed="True" result="Success" success="True" time="0.089" asserts="1" />
                              <test-case name="Sicemed.Tests.Models.Paginas.PaginasTests.PuedoAgregarUnArbolDeHijos" executed="True" result="Error" success="False" time="0.036" asserts="0">
                                <failure>
                                  <message><![CDATA[NHibernate.Exceptions.GenericADOException : could not execute batch command.[SQL: SQL not available]
  ----> System.Data.SqlClient.SqlException : Violation of UNIQUE KEY constraint 'UQ__Pagina__75E3EFCF1A69E950'. Cannot insert duplicate key in object 'dbo.Pagina'. The duplicate key value is (Padre).
Violation of UNIQUE KEY constraint 'UQ__Pagina__75E3EFCF1A69E950'. Cannot insert duplicate key in object 'dbo.Pagina'. The duplicate key value is (Hijo 1).
Violation of UNIQUE KEY constraint 'UQ__Pagina__75E3EFCF1A69E950'. Cannot insert duplicate key in object 'dbo.Pagina'. The duplicate key value is (Hijo 2).
The statement has been terminated.
The statement has been terminated.
The statement has been terminated.]]></message>
                                  <stack-trace><![CDATA[at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatchWithTiming(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatch()
at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
at NHibernate.Engine.ActionQueue.ExecuteActions()
at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
at NHibernate.Event.Default.DefaultFlushEventListener.OnFlush(FlushEvent event)
at NHibernate.Impl.SessionImpl.Flush()
at NHibernate.Transaction.AdoTransaction.Commit()
at Sicemed.Tests.Models.Paginas.PaginasTests.PuedoAgregarUnArbolDeHijos() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Paginas\PaginasTests.cs:line 26
--SqlException
at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
at System.Data.SqlClient.SqlCommand.ExecuteBatchRPCCommand()
at System.Data.SqlClient.SqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientSqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Paginas.PaginasTests.PuedoConsultarLasPaginasRaiz" executed="True" result="Error" success="False" time="0.038" asserts="0">
                                <failure>
                                  <message><![CDATA[NHibernate.Exceptions.GenericADOException : could not execute batch command.[SQL: SQL not available]
  ----> System.Data.SqlClient.SqlException : Violation of UNIQUE KEY constraint 'UQ__Pagina__75E3EFCF1A69E950'. Cannot insert duplicate key in object 'dbo.Pagina'. The duplicate key value is (Padre).
Violation of UNIQUE KEY constraint 'UQ__Pagina__75E3EFCF1A69E950'. Cannot insert duplicate key in object 'dbo.Pagina'. The duplicate key value is (Hijo 1).
Violation of UNIQUE KEY constraint 'UQ__Pagina__75E3EFCF1A69E950'. Cannot insert duplicate key in object 'dbo.Pagina'. The duplicate key value is (Hijo 2).
The statement has been terminated.
The statement has been terminated.
The statement has been terminated.]]></message>
                                  <stack-trace><![CDATA[at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatchWithTiming(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatch()
at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
at NHibernate.Engine.ActionQueue.ExecuteActions()
at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
at NHibernate.Event.Default.DefaultFlushEventListener.OnFlush(FlushEvent event)
at NHibernate.Impl.SessionImpl.Flush()
at NHibernate.Transaction.AdoTransaction.Commit()
at Sicemed.Tests.Models.Paginas.PaginasTests.PuedoConsultarLasPaginasRaiz() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Paginas\PaginasTests.cs:line 96
--SqlException
at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
at System.Data.SqlClient.SqlCommand.ExecuteBatchRPCCommand()
at System.Data.SqlClient.SqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientSqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
]]></stack-trace>
                                </failure>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Personas" executed="True" result="Failure" success="False" time="0.268" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="PersonasAsignacionRolesTest" executed="True" result="Failure" success="False" time="0.164" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.LanzaUnaExcepcionAlTraerUnaPersonaComoUnTipoQueNoEs" executed="True" result="Failure" success="False" time="0.022" asserts="1">
                                <failure>
                                  <message><![CDATA[  Expected: not null
  But was:  null
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.LanzaUnaExcepcionAlTraerUnaPersonaComoUnTipoQueNoEs() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 23
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoConsutarSiUnaPersonaEsDeUnTipo" executed="True" result="Failure" success="False" time="0.020" asserts="1">
                                <failure>
                                  <message><![CDATA[  Expected: not null
  But was:  null
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoConsutarSiUnaPersonaEsDeUnTipo() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 38
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnaPersonaSimple" executed="True" result="Failure" success="False" time="0.020" asserts="1">
                                <failure>
                                  <message><![CDATA[  Expected: not null
  But was:  null
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnaPersonaSimple() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 98
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnUsuarioConUnSoloRol" executed="True" result="Error" success="False" time="0.023" asserts="0">
                                <failure>
                                  <message><![CDATA[System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnUsuarioConUnSoloRol() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 54
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnUsuarioConVariosRoles" executed="True" result="Error" success="False" time="0.020" asserts="0">
                                <failure>
                                  <message><![CDATA[System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnUsuarioConVariosRoles() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 70
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnUsuarioSinRoles" executed="True" result="Failure" success="False" time="0.020" asserts="1">
                                <failure>
                                  <message><![CDATA[  Expected: not null
  But was:  null
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoCrearUnUsuarioSinRoles() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 83
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoTraerElTipoDePersonaConcreta" executed="True" result="Failure" success="False" time="0.022" asserts="1">
                                <failure>
                                  <message><![CDATA[  Expected: not null
  But was:  null
]]></message>
                                  <stack-trace><![CDATA[at Sicemed.Tests.Models.Personas.PersonasAsignacionRolesTest.PuedoTraerElTipoDePersonaConcreta() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\PersonasAsignacionRolesTest.cs:line 114
]]></stack-trace>
                                </failure>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="ProfesionalesAsignacionEspecialidadesTest" executed="True" result="Failure" success="False" time="0.100" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Personas.ProfesionalesAsignacionEspecialidadesTest.PuedoAsignarUnaEspecialidadAUnProfesional" executed="True" result="Error" success="False" time="0.075" asserts="0">
                                <failure>
                                  <message><![CDATA[NHibernate.Exceptions.GenericADOException : could not execute batch command.[SQL: SQL not available]
  ----> System.Data.SqlClient.SqlException : Violation of UNIQUE KEY constraint 'UQ__Especial__75E3EFCF3429BB53'. Cannot insert duplicate key in object 'dbo.Especialidad'. The duplicate key value is (Traumatologo).
The statement has been terminated.]]></message>
                                  <stack-trace><![CDATA[at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatchWithTiming(IDbCommand ps)
at NHibernate.AdoNet.AbstractBatcher.ExecuteBatch()
at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
at NHibernate.Engine.ActionQueue.ExecuteActions()
at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
at NHibernate.Event.Default.DefaultFlushEventListener.OnFlush(FlushEvent event)
at NHibernate.Impl.SessionImpl.Flush()
at Sicemed.Tests.Models.Personas.ProfesionalesAsignacionEspecialidadesTest.PuedoAsignarUnaEspecialidadAUnProfesional() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Models\Personas\ProfesionalesAsignacionEspecialidadesTest.cs:line 25
--SqlException
at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
at System.Data.SqlClient.SqlCommand.ExecuteBatchRPCCommand()
at System.Data.SqlClient.SqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientSqlCommandSet.ExecuteNonQuery()
at NHibernate.AdoNet.SqlClientBatchingBatcher.DoExecuteBatch(IDbCommand ps)
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Personas.ProfesionalesAsignacionEspecialidadesTest.PuedoAsignarUnaEspecialidadesAUnProfesional" executed="True" result="Success" success="True" time="0.023" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Provincias" executed="True" result="Success" success="True" time="0.103" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="ProvinciasTests" executed="True" result="Success" success="True" time="0.102" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Provincias.ProvinciasTests.PuedoCrearUnaProvincia" executed="True" result="Success" success="True" time="0.038" asserts="1" />
                              <test-case name="Sicemed.Tests.Models.Provincias.ProvinciasTests.PuedoCrearUnaProvinciaConLocalidades" executed="True" result="Success" success="True" time="0.060" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="Namespace" name="Turnos" executed="True" result="Failure" success="False" time="0.128" asserts="0">
                        <results>
                          <test-suite type="TestFixture" name="TurnosTests" executed="True" result="Failure" success="False" time="0.128" asserts="0">
                            <results>
                              <test-case name="Sicemed.Tests.Models.Turnos.TurnosTests.NoPuedoOtorgarUnTurnoAUnaEspecialidadQueNoAtiendeElProfesional" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                              <test-case name="Sicemed.Tests.Models.Turnos.TurnosTests.NoPuedoOtorgarUnTurnoViaWebConAgendaQueNoPerteneceAlProfesional" executed="True" result="Error" success="False" time="0.013" asserts="0">
                                <failure>
                                  <message><![CDATA[NHibernate.HibernateException : Illegal attempt to associate a collection with two open sessions]]></message>
                                  <stack-trace><![CDATA[at NHibernate.Collection.AbstractPersistentCollection.SetCurrentSession(ISessionImplementor session)
at NHibernate.Event.Default.OnUpdateVisitor.ProcessCollection(Object collection, CollectionType type)
at NHibernate.Event.Default.AbstractVisitor.ProcessValue(Object value, IType type)
at NHibernate.Event.Default.AbstractVisitor.ProcessValue(Int32 i, Object[] values, IType[] types)
at NHibernate.Event.Default.AbstractVisitor.ProcessEntityPropertyValues(Object[] values, IType[] types)
at NHibernate.Event.Default.AbstractVisitor.Process(Object obj, IEntityPersister persister)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformUpdate(SaveOrUpdateEvent event, Object entity, IEntityPersister persister)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsDetached(SaveOrUpdateEvent event)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Impl.SessionImpl.SaveOrUpdate(String entityName, Object obj)
at NHibernate.Engine.CascadingAction.SaveUpdateCascadingAction.Cascade(IEventSource session, Object child, String entityName, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeToOne(Object parent, Object child, IType type, CascadeStyle style, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeAssociation(Object parent, Object child, IType type, CascadeStyle style, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeProperty(Object parent, Object child, IType type, CascadeStyle style, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeCollectionElements(Object parent, Object child, CollectionType collectionType, CascadeStyle style, IType elemType, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeCollection(Object parent, Object child, CascadeStyle style, Object anything, CollectionType type)
at NHibernate.Engine.Cascade.CascadeAssociation(Object parent, Object child, IType type, CascadeStyle style, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeProperty(Object parent, Object child, IType type, CascadeStyle style, Object anything, Boolean isCascadeDeleteEnabled)
at NHibernate.Engine.Cascade.CascadeOn(IEntityPersister persister, Object parent, Object anything)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.CascadeOnUpdate(SaveOrUpdateEvent event, IEntityPersister persister, Object entity)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformUpdate(SaveOrUpdateEvent event, Object entity, IEntityPersister persister)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsDetached(SaveOrUpdateEvent event)
at NHibernate.Event.Default.DefaultUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Impl.SessionImpl.FireUpdate(SaveOrUpdateEvent event)
at NHibernate.Impl.SessionImpl.Update(Object obj)
at Sicemed.Tests.Models.Turnos.TurnosTests.NoPuedoOtorgarUnTurnoViaWebConAgendaQueNoPerteneceAlProfesional() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Turnos\TurnosTests.cs:line 146
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Turnos.TurnosTests.PuedoOtorgarUnTurnoPersonalmenteSinAgenda" executed="True" result="Success" success="True" time="0.065" asserts="8" />
                              <test-case name="Sicemed.Tests.Models.Turnos.TurnosTests.PuedoOtorgarUnTurnoViaWebConAgenda" executed="True" result="Error" success="False" time="0.007" asserts="0">
                                <failure>
                                  <message><![CDATA[NHibernate.HibernateException : Illegal attempt to associate a collection with two open sessions]]></message>
                                  <stack-trace><![CDATA[at NHibernate.Collection.AbstractPersistentCollection.SetCurrentSession(ISessionImplementor session)
at NHibernate.Event.Default.OnUpdateVisitor.ProcessCollection(Object collection, CollectionType type)
at NHibernate.Event.Default.AbstractVisitor.ProcessValue(Object value, IType type)
at NHibernate.Event.Default.AbstractVisitor.ProcessValue(Int32 i, Object[] values, IType[] types)
at NHibernate.Event.Default.AbstractVisitor.ProcessEntityPropertyValues(Object[] values, IType[] types)
at NHibernate.Event.Default.AbstractVisitor.Process(Object obj, IEntityPersister persister)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformUpdate(SaveOrUpdateEvent event, Object entity, IEntityPersister persister)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsDetached(SaveOrUpdateEvent event)
at NHibernate.Event.Default.DefaultUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
at NHibernate.Impl.SessionImpl.FireUpdate(SaveOrUpdateEvent event)
at NHibernate.Impl.SessionImpl.Update(Object obj)
at Sicemed.Tests.Models.Turnos.TurnosTests.PuedoOtorgarUnTurnoViaWebConAgenda() in D:\Documents\Projects\Sicemed\Sicemed\Sicemed.Tests\Turnos\TurnosTests.cs:line 102
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Sicemed.Tests.Models.Turnos.TurnosTests.PuedoOtorgarUnTurnoViaWebSinAgenda" executed="True" result="Success" success="True" time="0.027" asserts="8" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>