@using Sicemed.Web.Models
@using Sicemed.Web.Models.Enumerations.Documentos
@using Sicemed.Web.Models.Roles
@model IEnumerable<Provincia>
@{
    ViewBag.Title = "Administración De Personas";
}
<style>
    ul.roles
    {
        margin: 0;
        padding: 0;
        padding-left: 14px;
    }
</style>
<h2>
    Administraci&oacute;n de Personas
</h2>
@Html.Partial("GrillaBase")
@section Scripts{
    <script type="text/javascript">
        jQuery(document).ready(function ($) {

            app.grid.initialize({
                url: {
                    list: '@Url.Action("List")'
                },
                buttons: [                    
                    {
                        caption: "",
                        buttonicon: "ui-icon-plus",
                        onClickButton: function () {
                            window.location = "@Url.Action("Nuevo")";
                        }
                    },
                    {
                        caption: "",
                        buttonicon: "ui-icon-pencil",
                        onClickButton: function () {
                            var grid = $(this);
                            var selected = grid.getGridParam("selrow");
                            if(!selected) {
                                app.ui.showError("Debe seleccionar un Usuario.");
                                return;
                            }
                            window.location = "@Url.Action("Editar")?personaId=" + selected;                            
                        }
                    },
                    {
                        caption: "",
                        buttonicon: "ui-icon-locked",
                        onClickButton: function () {
                            var grid = $(this);
                            var selected = grid.getGridParam("selrow");
                            if(!selected) {
                                app.ui.showError("Debe seleccionar un Usuario.");
                                return;
                            }
                            $.postAntiForgery("@Url.Action("BloquearUsuario")", { usuarioId: selected }, function () {
                                grid.trigger("reloadGrid");
                            });
                        }
                    },
                    {
                        caption: "",
                        buttonicon: "ui-icon-unlocked",
                        onClickButton: function () {
                            var grid = $(this);
                            var selected = grid.getGridParam("selrow");
                            if(!selected) {
                                app.ui.showError("Debe seleccionar un Usuario.");
                                return;
                            }
                            $.postAntiForgery("@Url.Action("DesbloquearUsuario")", { usuarioId: selected }, function () {
                                grid.trigger("reloadGrid");
                            });
                        }
                    }                    
                ],
                params: {
                    editable: false,
                    addable: false,
                    deleteable: false,
                    caption: 'Gesti&oacute;n De Personas',
                    emptyrecords: 'No hay Personas cargados.',
                    colNames: [
                        'Id',
                        'Nombre Completo',
                        'Roles',
                        'Fec. Nac.',
                        'Documento',
                        'Domicilio',
                        'Telefono',
                        'Bloqueado?'
                    ],
                    colModel: [
                            {
                                name: 'Id',
                                index: 'Id',
                                width: 55,
                                sortable: false,
                                hidden: true
                            },
                            {
                                name: 'Usuario',
                                index: 'Usuario',
                                width: 150,
                                formatter: function (cellvalue, options, rowObject) {
                                    var str = "<div>" + rowObject.NombreCompleto + "</div>"
                                        + "<div>" + rowObject.MembershipEmail + "</div>";
                                    return str;
                                },
                                sortable: false
                            },
                            {
                                name: 'Roles',
                                index: 'Roles',
                                width: 90,
                                formatter: function (cellvalue, options, rowObject) {
                                    return rowObject.Roles.join(", ");
                                },
                                editable: false,
                                sortable: false
                            },
                            {
                                name: 'FechaNacimiento',
                                index: 'FechaNacimiento',
                                width: 60,
                                sortable: false,
                                formatter: 'date',
                                formatoptions: {
                                    newformat: 'd/m/Y'
                                }
                            },
                            {
                                name: 'Documento',
                                index: 'Documento',
                                width: 90,
                                formatter: function (cellvalue, options, rowObject) {
                                    var str = rowObject.DocumentoTipoDocumentoDisplayName
                                    + " " + rowObject.DocumentoNumero;
                                    return str;
                                },
                                sortable: false
                            },
                            {
                                name: 'Domicilio',
                                index: 'Domicilio',
                                width: 150,
                                formatter: function (cellvalue, options, rowObject) {
                                    var str = "<div>" + rowObject.DomicilioDireccion + "</div>"
                                        + "<div>" + rowObject.DomicilioLocalidadNombre
                                        + ", " + rowObject.DomicilioLocalidadProvinciaNombre + "</div>";
                                    return str;
                                },
                                sortable: false
                            },
                            {
                                name: 'Telefono',
                                index: 'Telefono',
                                width: 100,
                                formatter: function (cellvalue, options, rowObject) {
                                    var str = rowObject.TelefonoPrefijo != ""
                                        ? "(" + rowObject.TelefonoPrefijo + ") " : "";
                                    str += rowObject.TelefonoNumero;
                                    return str;
                                },
                                sortable: false
                            },
                            {
                                name: 'MembershipIsLockedOut',
                                index: 'MembershipIsLockedOut',
                                width: 60,
                                sortable: false
                            }
                        ]
                }
            });
        });
    </script>
}
