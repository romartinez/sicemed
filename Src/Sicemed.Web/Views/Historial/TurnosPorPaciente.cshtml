@using Sicemed.Web.Infrastructure.Helpers
@using Sicemed.Web.Models
@model Sicemed.Web.Models.ViewModels.Historial.TurnosPorPacienteViewModel
@{
    ViewBag.Title = "Historial Turnos";
}
<h2>
    Historial Turnos
</h2>

@using (Html.BeginForm("TurnosPorPaciente", "Historial", FormMethod.Get, new { id = "search-filters" }))
{
    <div>
        <h3 class="ui-accordion-header ui-helper-reset ui-state-active ui-corner-top" style="margin: 0; border-bottom: none;">
            Filtros
        </h3>
        <div class="ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content-active">
            @Html.ValidationSummaryWithMessage()
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.PacienteId)
                        @Html.EditorFor(x => x.PacienteId)
                    </td>
                    <td>
                        @Html.LabelFor(x => x.Desde)
                        @Html.EditorFor(x => x.Desde)
                    </td>
                    <td>
                        @Html.LabelFor(x => x.Hasta)
                        @Html.EditorFor(x => x.Hasta)
                    </td>
                    <td>
                        @Html.LabelFor(x => x.Filtro)
                        @Html.EditorFor(x => x.Filtro)
                    </td>
                    <td>
                        <input type="hidden" value="true" name="BusquedaEfectuada"/>
                        @Html.Submit("Filtrar")
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(x => x.PacienteId)
                    </td>
                    <td>
                        @Html.ValidationMessageFor(x => x.Desde)
                    </td>
                    <td>
                        @Html.ValidationMessageFor(x => x.Hasta)
                    </td>
                    <td>
                        @Html.ValidationMessageFor(x => x.Filtro)
                    </td>
                    <td>
                    </td>
                </tr>
            </table>
        </div>
    </div>        
}
@if (Model.PacienteId.HasValue)
{
    if (!Model.Turnos.Any())
    {
    <div class="msg-error">
        El paciente no posee turnos en las fechas seleccionadas.
    </div>
    }
    else
    {
    <div class="historial">
        @foreach (var turno in Model.Turnos)
        {
            <div class="turno turno-@turno.Estado.ToString().ToLower()">
                <h4>@turno.FechaTurno.ToFullDate() - @turno.Profesional.Descripcion | @turno.Estado
                </h4>
                <div>
                    Especialidad: @turno.Especialidad.Descripcion
                    @if (@turno.Consultorio != null)
                    {
                        <br />
                        @:Consultorio: @turno.Consultorio.Descripcion
                        }
                </div>
                @if (turno.Estado == Turno.EstadoTurno.Cancelado)
                {
                    <strong>Cancelaci&oacute;n</strong>
                    <div>
                        Cancelado por @turno.CanceladoPor.Descripcion el @turno.FechaCancelacion.Value.ToFullDate()
                    </div>
                    <strong>Motivo</strong>
                    <div>
                        @Html.Nl2Br(turno.MotivoCancelacion)
                    </div>
                }
            </div>
        }
    </div>
    }
}
<script id="tmplBusquedaPaciente" type="text/x-jquery-tmpl">
    ${NombreCompleto}
    <br />
    <span style="font-style: italic; font-size: x-small">${TipoDocumento} ${Documento}
    </span>
</script>
