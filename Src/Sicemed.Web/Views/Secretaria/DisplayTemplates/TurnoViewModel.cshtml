@using Sicemed.Web.Infrastructure.Helpers
@using Sicemed.Web.Models
@using Sicemed.Web.Models.Enumerations

@model Sicemed.Web.Models.ViewModels.Secretaria.TurnosDelDiaViewModel.TurnoViewModel
<li class="turno turno-@Model.Estado.ToString().ToLower()">
    <h4>@Model.FechaTurno.ToShortTimeString() - @Model.Paciente.Descripcion | @Model.Estado</h4>
    @if (Model.Estado == EstadoTurno.Otorgado || Model.Estado == EstadoTurno.Presentado)
    {
    <div>
        @if (@Model.Consultorio != null)
        {
            @:Consultorio: @Model.Consultorio.Descripcion
        }
        <br />
        Especialidad: @Model.Especialidad.Descripcion
        <br />

        @if (@Model.Plan != null)
            {
                @:Obra Social: @Model.Plan.ObraSocial.RazonSocial
                <br />
                @:Plan:@Model.Plan.Nombre
                <br />
                @:Numero Afiliado: @Model.NumeroAfiliado
                <br />
                @:Monto Abonar: $  @Math.Round(Model.Coseguro,2)
            }            
        else
            {
                @:Obra Social: N/A - Modifique los Datos
                <br />
                @:Plan: N/A - Modifique los Datos
                <br />
                @:Numero Afiliado: N/A - Modifique los Datos
                <br />
                @:Monto Abonar: $  @Math.Round(0.00,2)
            }
        <br />
         <a href="@Url.Action("EditarObraSocialTurno", "Secretaria", new { id = Model.Id })" target="_blank" class="button_link btn_yellow"><span>Modificar Forma Pago</span></a>
    </div>        
/* ESTO ES LO QUE QUIERO HACER APARECER
            <div>
                <br />
                @using (Html.BeginForm("EditarObraSocialTurno", "Secretaria", FormMethod.Get, new { id = Model.Id }))
                {    
                    @Html.AntiForgeryToken()
    
                    @Html.ValidationSummaryWithMessage()

                    @Html.EditorForModel("EditarObraSocialTurno","id?="+Model.Id)

                    @Html.Submit("Guardar")  
                }
            </div>
*/        
    }
    <div>
        @if (Model.Estado == EstadoTurno.Presentado)
        {
            <div>El usuario se encuentra esperando hace @(DateTime.Now.Subtract(Model.FechaIngreso.Value).Minutes)
                minutos.</div>            
        }
        @if (Model.Estado == EstadoTurno.Presentado)
        {
            <span>Se encuentra esperando hace @(DateTime.Now.Subtract(Model.FechaIngreso.Value).Minutes)
                minutos.</span>
        }
        @if (Model.Estado == EstadoTurno.Cancelado)
        {
            <strong>Cancelaci&oacute;n</strong>
            <div>
                Cancelado por @Model.CanceladoPor.Descripcion el @Model.FechaCancelacion.Value.ToFullDate()
            </div>
            <strong>Motivo</strong>
            <div>                    
                @Html.Nl2Br(Model.MotivoCancelacion)
            </div>
        }                 
        @if (Model.PuedoCancelar)
        {
            <div>
            @using (Html.BeginForm("CancelarTurno", "Secretaria"))
            {
                @Html.Partial("_CancelarTurno")
            }                
            </div>
        }
        @if (Model.PuedoPresentar)
        {
            <div >
                @using (Html.BeginForm("RegistrarIngresoPaciente", "Secretaria"))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="turnoId" value="@Model.Id"/>
                    @Html.Submit("Ingresar")
                }
            </div>
            <div>
                <a href="@Url.Action("TurnosPorPaciente", "Historial", new { PacienteId = Model.Paciente.Id })" target="_blank" class="button_link btn_blue"><span>Historial Atenciones</span></a>
            </div>
        }
    </div>
</li>
