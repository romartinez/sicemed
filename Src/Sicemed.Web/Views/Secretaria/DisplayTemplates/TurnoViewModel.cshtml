@using Sicemed.Web.Infrastructure.Helpers
@using Sicemed.Web.Models
@using Sicemed.Web.Models.Enumerations

@model Sicemed.Web.Models.ViewModels.Secretaria.TurnosDelDiaViewModel.TurnoViewModel
<li class="turno turno-@Model.Estado.ToString().ToLower()">
    <h4>@Model.FechaTurno.ToShortTimeString() - @Model.Paciente.Descripcion | @Model.Estado</h4>
    @if (Model.Estado == EstadoTurno.Otorgado || Model.Estado == EstadoTurno.Presentado)
    {
    <div>

        <TABLE>
          <TR>
            <TD style="text-align:left;width:60%" >  
                @if (@Model.Consultorio != null)
                {
                    <span class="text-blue-negrita-subrayada" >Consultorio:</span><span class="text-black-negrita"> @Model.Consultorio.Descripcion</span> 
                }
                <br />
                <br />
                <span class="text-blue-negrita-subrayada" >Especialidad:</span><span class="text-black-negrita"> @Model.Especialidad.Descripcion</span> 
                <br />
                <br />

                @if (@Model.Plan != null)
                    {
                        <span class="text-blue-negrita-subrayada" >Obra Social:</span><span class="text-black-negrita"> @Model.Plan.ObraSocial.RazonSocial</span> 
                        <br />
                        <br />  
                        <span class="text-blue-negrita-subrayada" >Plan:</span><span class="text-black-negrita"> @Model.Plan.Nombre</span> 
                        <br />
                        <br />
                        <span class="text-blue-negrita-subrayada" >Numero Afiliado:</span><span class="text-black-negrita"> @Model.NumeroAfiliado</span> 
                        <br />
                        <br />
                        <span class="text-blue-negrita-subrayada" >Monto Abonar:</span><span class="text-black-negrita"> $  @Math.Round(Model.Coseguro,2)</span> 
                    }            
                else
                    {
                        <span class="text-blue-negrita-subrayada" >Obra Social:</span><span class="text-red-negrita"> N/A - Modifique los Datos</span> 
                        <br />
                        <br />
                        <span class="text-blue-negrita-subrayada" >Plan:</span><span class="text-red-negrita"> N/A - Modifique los Datos</span> 
                        <br />
                        <br />
                        <span class="text-blue-negrita-subrayada" >Numero Afiliado:</span><span class="text-red-negrita"> N/A - Modifique los Datos</span> 
                        <br />
                        <br />
                        <span class="text-blue-negrita-subrayada" >Monto Abonar:</span><span class="text-red-negrita"> $  @Math.Round(0.00,2)</span> 
                    }
                <br />
            </TD>
            <td></td><td></td><td></td><td></td><td></td><td></td>
            <TD style="text-align:left;width:40%">          
                @if (Model.PuedoPresentar)
                 {
                     <a href="@Url.Action("EditarObraSocialTurno", "Secretaria", new { id = Model.Id })"  class="button_link btn_yellow"><span>Modificar Forma Pago</span></a>
                 }
                 @if (Model.PuedoCancelar)
                {
                    <div>
                    @using (Html.BeginForm("CancelarTurno", "Secretaria"))
                    {
                        @Html.Partial("_CancelarTurno")
                    }                
                    </div>
                }
                @if (Model.PuedoPresentar)
                {
                    <div >
                        @using (Html.BeginForm("RegistrarIngresoPaciente", "Secretaria"))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="turnoId" value="@Model.Id"/>
                            @Html.Submit("Ingresar")
                        }
                    </div>
                    <div>
                        <a href="@Url.Action("TurnosPorPaciente", "Historial", new { PacienteId = Model.Paciente.Id })" target="_blank" class="button_link btn_blue"><span>Historial Atenciones</span></a>
                    </div>
                }

            </TD>
          </TR>
        </TABLE>

    </div>        
    }
    <br />
    <div>
        @if (Model.Estado == EstadoTurno.Presentado)
        {
            <div>
            <span class="text-green-negrita">El paciente se encuentra esperando hace @(DateTime.Now.Subtract(Model.FechaIngreso.Value).Minutes)
                minutos.</span>
             <br>            
            </div>
        }
        @if (Model.Estado == EstadoTurno.Cancelado)
        {
            <div>
                <SPAN class="text-red-negrita-subrayada">Cancelaci&oacute;n</SPAN>
                <div>
                 <span class="text-red">
                    Cancelado por @Model.CanceladoPor.Descripcion el @Model.FechaCancelacion.Value.ToFullDate()
                </span>
                 </div>
                <br>
                <span class="text-red-negrita-subrayada">Motivo</span>
                <div>
                    <span class="text-red">                    
                        @Html.Nl2Br(Model.MotivoCancelacion)
                    </span>
                </div>
                <br>
            </div>
        }     
    </div>
</li>
